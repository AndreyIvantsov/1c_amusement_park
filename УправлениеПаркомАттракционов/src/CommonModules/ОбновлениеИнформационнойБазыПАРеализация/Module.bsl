// @strict-types

#Область ПрограммныйИнтерфейс

// Обработчик обновления для переноса пользователей из справочника, созданного до внедрения БСП
//
Процедура ПеренестиПользователейИзПредыдущейВерсии() Экспорт

	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	паПользователи.Ссылка,
	|	паПользователи.Наименование,
	|	паПользователи.ИдентификаторПользователяИБ
	|ИЗ
	|	Справочник.паПользователи КАК паПользователи
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Пользователи КАК Пользователи
	|		ПО паПользователи.ИдентификаторПользователяИБ = Пользователи.ИдентификаторПользователяИБ
	|ГДЕ
	|	Пользователи.Ссылка ЕСТЬ NULL
	|	И НЕ паПользователи.ИдентификаторПользователяИБ = &ПустойИдентификатор";

	Запрос.УстановитьПараметр("ПустойИдентификатор", ОбщегоНазначенияКлиентСервер.ПустойУникальныйИдентификатор());

	Выборка = Запрос.Выполнить().Выбрать();

	Пока Выборка.Следующий() Цикл
		НачатьТранзакцию();

		Попытка
			ПользовательОбъект = Справочники.Пользователи.СоздатьЭлемент();
			ПользовательОбъект.Наименование = Выборка.Наименование;
			ПользовательОбъект.ИдентификаторПользователяИБ = Выборка.ИдентификаторПользователяИБ;
			ОбновлениеИнформационнойБазы.ЗаписатьДанные(ПользовательОбъект);
			НазначитьПрофилиГруппДоступа(ПользовательОбъект.Ссылка, Выборка.ИдентификаторПользователяИБ);
			ПользовательОбъект.Записать();
			ЗафиксироватьТранзакцию();
		Исключение
			ОтменитьТранзакцию();
			ВызватьИсключение;
		КонецПопытки;

	КонецЦикла;

КонецПроцедуры
#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура НазначитьПрофилиГруппДоступа(Пользователь, ИдентификаторПользователяИБ)

	ПользовательИБ = ПользователиИнформационнойБазы.НайтиПоУникальномуИдентификатору(ИдентификаторПользователяИБ);

	Если ПользовательИБ = Неопределено Тогда
		Возврат;
	КонецЕсли;

	ЭтоАдминистратор = Ложь;
	ЭтоКассир = Ложь;
	ЭтоОператорАттракционов = Ложь;

	Для Каждого Роль Из ПользовательИБ.Роли Цикл
		Если Роль = Метаданные.Роли.паПолныеПрава Тогда
			ЭтоАдминистратор = Истина;
		ИначеЕсли Роль = Метаданные.Роли.Кассир Тогда
			ЭтоКассир = Истина;
		ИначеЕсли Роль = Метаданные.Роли.ОператорАттракционов Тогда
			ЭтоОператорАттракционов = Истина;
		КонецЕсли;
	КонецЦикла;

	Если ЭтоАдминистратор Тогда
		УправлениеДоступом.ВключитьПрофильПользователю(Пользователь, "Администратор");
	ИначеЕсли ЭтоКассир Тогда
		УправлениеДоступом.ВключитьПрофильПользователю(Пользователь, "Кассир");
	ИначеЕсли ЭтоОператорАттракционов Тогда
		УправлениеДоступом.ВключитьПрофильПользователю(Пользователь, "ОператорАттракционов");
	КонецЕсли;

КонецПроцедуры

#КонецОбласти